package string;
import java.util.* ;


public class string_ {

   static boolean isPalindrome(String s) {
        s = s.toLowerCase();
        int j = s.length() - 1;

        for (int i = 0; i <= s.length() / 2; i++) {
            if (s.charAt(i) != s.charAt(j))
                return false;

            j--;
        }
        return true;
    }


    static String toggleChar(String s) {
        String newS = "";
        for (char c : s.toCharArray()) {

            if (c >= 'A' && c <= 'Z') {                                // ch <= 90
                newS += (char) (c + 32);
//             newS += Character.toLowerCase(c);
            } else if (c >= 'a' && c <= 'z') {
                newS += (char) (c - 32);
//               newS += Character.toUpperCase(c);
            }
        }

        return newS;
    }


    static int validWord(String w[], String pref) {
        int c = 0 ;
        int p = pref.length();

        for(String wd : w){                                       // (wd.indexOf(pref) == 0 )  c++
            boolean isEq = true ;                                 //  wd.startsWith(pref)  c++

            if(wd.length() >= p){
                for(int i =0 ; i < p ;i++){
                    if(wd.charAt(i) != pref.charAt(i)) isEq = false;
                }
            }
            if(isEq) c++ ;
        }
        return c ;
    }


    static int countIsPresent(String a[], String s) {
        int c = 0;
        for (int i = 0; i < a.length; i++) {
            String w = a[i];
            if (w.indexOf(s) >= 0) c++;
        }
        return c;
    }


    static String splitChange(String s[]) {
        String st = "";
        for (String w : s) {
            if (w.length() <= 2) w = w.toUpperCase();
            else {
                w = Character.toUpperCase(w.charAt(0))
                        + w.substring(1, w.length() - 1)
                        + Character.toUpperCase(w.charAt(w.length() - 1));
            }

            st += w + " ";
        }

        return st;
    }


    public static void countInString(String s ){// vowel const no sp

        int space =0, V=0 , Cons=0 , sp=0 , No = 0 ;

        for(char ch : s.toCharArray()){

            if(ch == ' ' ) space++ ;
            else if (ch >= 48 && ch <= 57) No++;
            else if( "aeiouAEIOU".indexOf(ch) != -1) V ++ ;
            else if (ch >= 'A' && ch <= 'Z' || ch >= 'a' && ch <= 'z')  Cons ++ ;
            else sp++;
        }
        System.out.println("Vowel - " + V + " consonant - "+ Cons + " Space - " + space + " special_Char - " + sp + " No - "+ No);

    }


    public static void freqOfCharInSent(String sent) {
        String words[] = sent.split(" ");
        Map<Character, Integer> m = new HashMap<>();

        for (String w : words) {
            for (char ch : w.toLowerCase().toCharArray()) {
                m.put(ch, m.getOrDefault(ch, 0) + 1);
            }
        }

        for (Character k : m.keySet()) {
            System.out.println(k + " - " + m.get(k));
        }
    }


    public static boolean isAnagram(String s1, String s2) {
        if (s1.length() != s2.length()) return false;

        Map<Character, Integer> s1freq = new HashMap<>();
        for (char ch : s1.toCharArray())
            s1freq.put(ch, s1freq.getOrDefault(ch, 0) + 1);

        Map<Character, Integer> s2freq = new HashMap<>();
        for (char ch : s2.toCharArray())
            s2freq.put(ch, s2freq.getOrDefault(ch, 0) + 1);

        return s1freq.equals(s2freq);

    }






    public static void main(String[] args) {

        // 51
        String s = "Madam";
        System.out.println(isPalindrome(s) ? "Yes" : "No");

        //count vowel and consonant
        countInString("hun cdKI UH ou345 *(&4");

        // count no also
        String st = "hey123dsa 123aei,./'";
        int V = 0, C = 0, No = 0 , specialCh =0 , sp =0;

        for (int i = 0; i < st.length(); i++) {
            char ch = st.charAt(i);

//            if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') V++;
            if(ch == 32) sp ++ ;
            else if(isVowel(ch)) V++;
            else if (Character.isLetter(st.charAt(i))) C++;
            else if(ch >= 48 && ch <= 56) No++;
            else specialCh ++ ;

        }
        System.out.println("vowels: " + V + ", consonat: " + C + ", Number: " + No + " specialCh " + specialCh + " space " + sp);


        // 52   Toggle characters
        String S = "AcgDfD";
        System.out.println(toggleChar(S));


        // 53 count Valid Words
        String arr[] = {"pay", "attire", "practice", "attend", "presentation"};
        System.out.println(validWord(arr, "at"));

        // is present  "at"
        System.out.println(countIsPresent(arr, "at"));


        // 54  Split and capital first
        String sentence = "Hello bhai kaise ho a";
        String sentenceAr[] = sentence.split(" ");
        System.out.println(splitChange(sentenceAr));


        // count frequency
        String t = "Hellodosto";
        t = t.toLowerCase();
        int freq[] = new int[26];

        for (int i = 0; i < t.length(); i++) {
            char ch = t.charAt(i);
            freq[ch - 97]++;
        }

        for (int i = 0; i < freq.length; i++) {
            if (freq[i] > 0)
                System.out.println((char)(i + 97) + " " + freq[i]);
        }






      String inp =  "*abc*def*u**" ;
        Stack <Character> stk = new Stack<>();

        for( char ch : inp.toCharArray()){
            if( ch == '*'){
                if( ! stk.isEmpty()) stk.pop();
            }
            else stk.push(ch);
        }
        StringBuilder sb = new StringBuilder();
        for( char ch : stk)
            sb.append(ch);

        System.out.println(sb.toString());






    }

    static boolean isVowel (char ch){
        return "aeiouAEIOU".indexOf(ch) != -1 ;
    }
}
